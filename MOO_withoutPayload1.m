
% Payload, Speed, Fleet Size
% MAYBE ADD loading rate, unloading rate, load threshold
lb = [2,   20, 1, 0]; % , 0.001,
ub = [30,  87, 4, 1];
options = optimset('Display','off');
disp("Beginning Optimization...")
format shortg
c = clock;
disp(c(4:5))
for i = 1:10000 % run GA multiple times to determine result
%     [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,@nlc);
    [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model1, length(lb),[],[],[],[],lb,ub,[],options); % seems reasonable
%     xGA_nl(:,i) = fmincon(@airship_surrogate_model,lb,[],[],[],[],lb,ub); % not good
end
[mv,mi] = mink(fGA_nl,10);
minbest = xGA_nl(:,mi)
MEANBEST = round(mean(minbest,2))
meanbest2 = round(mean(round(minbest),2))


figure(11)
plot(1:length(xGA_nl),xGA_nl(1,:))
title('payload')
figure(21)
plot(1:length(xGA_nl),xGA_nl(2,:))
title('speed')
figure(31)
plot(1:length(xGA_nl),xGA_nl(3,:))
title('fleet')
figure(41)
plot(1:length(xGA_nl),xGA_nl(4,:))
title('threshold')
figure(51)
plot(1:length(fGA_nl),fGA_nl)
title('f val')

% format bank
% nlc([5,59,2])

function f = airship_surrogate_model1(x)
wB = -0.0; % minimize Impact to Boat Jobs (B/C it's already negative)
wC = -0.3; % maximize Impact to Crops
wF =  0.1; % minimize Impact to Forest
wI = -0.3; % maximize Impact to Farmer Income
wT = -0.3; % maximize Impact to Farmer Time
PAYLOAD = round(x(1));
CRUISESPEED = round(x(2));
FLEETSIZE = round(x(3));
LOADTHRESHOLD = x(4);
% if PAYLOAD == 2 && CRUISESPEED == 20 && FLEETSIZE == 4 && LOADTHRESHOLD > 0.5 && LOADTHRESHOLD < 0.53
%     stophere = 1;
% end

% Neural Models
H2_1 = tanh((-29.4715786893315 + 0.527935421978058 * CRUISESPEED + 3.80267129339144 * FLEETSIZE + 0.831125144649321 * LOADTHRESHOLD + 0.0292248726027655 * PAYLOAD));

H2_2 = tanh((-2.80998944619746 + 0.0183071236798251 * CRUISESPEED + 0.375547996518081 * FLEETSIZE + -0.00536694278526947 * LOADTHRESHOLD + 0.680951770043885 * PAYLOAD));

H2_3 = tanh((6.52211152395192 + 0.0191786187541027 * CRUISESPEED + -4.23413165274579 * FLEETSIZE + 0.244828632549694 * LOADTHRESHOLD + -0.0669692653992916 * PAYLOAD));

H2_4 = tanh((2.47994860146613 + -0.0124931054044829 * CRUISESPEED + -2.08960161944459 * FLEETSIZE + -0.0108606237961061 * LOADTHRESHOLD + -0.0636895647582423 * PAYLOAD));

H1_1 = tanh((-3.52755167026604 + 0.168354802328382 * H2_1 + -4.15122624970786 * H2_2 + -1.27933481909094 * H2_3 + -2.15976937067943 * H2_4));

H1_2 = tanh((0.73821901314939 + 0.294328258159111 * H2_1 + 3.70779406848597 * H2_2 + -0.48387428557131 * H2_3 + 3.56051916270474 * H2_4));

H1_3 = tanh((-1.43719496275381 + -0.110006123877199 * H2_1 + -1.7899869844934 * H2_2 + 0.284702811665141 * H2_3 + -2.92734548873273 * H2_4));

H1_4 = tanh((-2.45436180669748 + -0.000423698638995595 * H2_1 + 0.911496547157316 * H2_2 + -1.35762492275053 * H2_3 + -0.493617002720415 * H2_4));

PREDICTED_BOAT_TRIP_LOSS_1 = -1723.77017683132 + 481.97582015888 * H1_1 + -2462.26241456943 * H1_2 + -2154.46133565515 * H1_3 + -184.878245785015 * H1_4;


H2_1 = tanh((11.1301009692811 + 0.0458862321453533 * CRUISESPEED + -10.1620497616434 * FLEETSIZE + -1.53862765714314 * LOADTHRESHOLD + 0.0118793598760547 * PAYLOAD));

H2_2 = tanh((-0.356383000122403 + 0.00186945045002359 * CRUISESPEED + 0.210182239275127 * FLEETSIZE + -0.00813845604347867 * LOADTHRESHOLD + 0.276159486546578 * PAYLOAD));

H2_3 = tanh((0.0474002186335636 + -0.0243889790471536 * CRUISESPEED + -0.0913456555918823 * FLEETSIZE + -0.0281186687916226 * LOADTHRESHOLD + -0.0285349284782277 * PAYLOAD));

H2_4 = tanh((7.00825593174526 + -0.214475976047584 * CRUISESPEED + -0.551020570571484 * FLEETSIZE + -0.00440825276525628 * LOADTHRESHOLD + 0.0694282800116683 * PAYLOAD));

H1_1 = tanh((7.60701428683723 + -0.888899353055303 * H2_1 + -7.71608021767963 * H2_2 + 3.76101351832838 * H2_3 + 0.178632609427863 * H2_4));

H1_2 = tanh((-2.70456703586224 + -0.752747497745386 * H2_1 + 1.93782797241928 * H2_2 + -1.89823121211159 * H2_3 + -0.125952737920551 * H2_4));

H1_3 = tanh((0.69073353971513 + 0.402756673888232 * H2_1 + -0.715206081122734 * H2_2 + 0.591463105963421 * H2_3 + 0.0388321265692123 * H2_4));

H1_4 = tanh((9.76913272559295 + -1.96751873388882 * H2_1 + 5.56341612770623 * H2_2 + 5.60569786250772 * H2_3 + -8.16177923967373 * H2_4));

PREDICTED_CROP_LOSS_1 = -131.418378995923 + -266.384870096028 * H1_1 + 1287.1300356097 * H1_2 + 1219.1157320826 * H1_3 + 235.232586258464 * H1_4;


H2_1 = tanh((1.23933459466729 + -0.0000001338749808686 * CRUISESPEED + -0.237038350919051 * FLEETSIZE + 0.0000065589125889715 * LOADTHRESHOLD + 0.0342267685165568 * PAYLOAD));

H2_2 = tanh((0.443434510052382 + -0.0000000665411743804 * CRUISESPEED + 0.0493904813454416 * FLEETSIZE + -0.000002727729616211 * LOADTHRESHOLD + -0.0108525505573244 * PAYLOAD));

H2_3 = tanh((0.651976267648296 + -0.0000000433802566561 * CRUISESPEED + -0.0251449759170448 * FLEETSIZE + -0.0000013214233093745 * LOADTHRESHOLD + -0.00702780710353088 * PAYLOAD));

H2_4 = tanh((-3.64059254122614 + 0.0000000073677085568 * CRUISESPEED + 2.00080544381228 * FLEETSIZE + -0.0000197155662198002 * LOADTHRESHOLD + -0.0490308358993629 * PAYLOAD));

H1_1 = tanh((12.5912423614419 + 2.80296990284635 * H2_1 + -0.742002294446776 * H2_2 + -23.8532472586046 * H2_3 + -0.376818995483022 * H2_4));

H1_2 = tanh((-1.5081407842411 + -1.75442583339759 * H2_1 + -6.38988490756302 * H2_2 + 11.6575649211024 * H2_3 + 0.110159285780485 * H2_4));

H1_3 = tanh((-0.593278438051796 + -1.76217413966034 * H2_1 + -4.01957685175097 * H2_2 + 12.2912992415859 * H2_3 + -0.903571360099979 * H2_4));

H1_4 = tanh((7.47006557600783 + -9.2682944826377 * H2_1 + -3.6333380359949 * H2_2 + 8.05677607432051 * H2_3 + 0.217632070522554 * H2_4));

PREDICTED_FOREST_LOSS_1 = 10694.3511211261 + 5515.92320234251 * H1_1 + -10790.7714619897 * H1_2 + -5535.02070680921 * H1_3 + -3994.14604064407 * H1_4;


H2_1 = tanh((2.26105066402074 + -0.0146469146617243 * CRUISESPEED + -0.302501224775952 * FLEETSIZE + 0.00379668609106289 * LOADTHRESHOLD + -0.0193425223707447 * PAYLOAD));

H2_2 = tanh((-2.02938717146558 + 0.0409586010466056 * CRUISESPEED + 0.121305858081198 * FLEETSIZE + 0.77455887830948 * LOADTHRESHOLD + -0.201541893448331 * PAYLOAD));

H2_3 = tanh((-3.49686600115262 + -0.0454607655240021 * CRUISESPEED + 5.78516001992291 * FLEETSIZE + -0.625946649423527 * LOADTHRESHOLD + 0.0067866098927221 * PAYLOAD));

H2_4 = tanh((-2.89123840511102 + 0.0191197726204442 * CRUISESPEED + 0.137366645874345 * FLEETSIZE + -0.0812734854233385 * LOADTHRESHOLD + 0.0193497738494568 * PAYLOAD));

H1_1 = tanh((0.710999789387294 + 0.302931029945537 * H2_1 + -0.163731311948616 * H2_2 + 0.0343726661069421 * H2_3 + 2.54209019901939 * H2_4));

H1_2 = tanh((5.70515323195462 + 5.1391104019898 * H2_1 + -6.25208050103086 * H2_2 + -7.57673924718998 * H2_3 + 10.3064458620445 * H2_4));

H1_3 = tanh((-6.73747680458504 + -13.7271523673476 * H2_1 + -1.11807216711856 * H2_2 + -0.428988636864388 * H2_3 + -19.3565966119622 * H2_4));

H1_4 = tanh((-7.41681871049157 + 0.788171507805031 * H2_1 + 0.00334575558479281 * H2_2 + 8.36912363396588 * H2_3 + 1.36504251925143 * H2_4));

PREDICTED_INCOME_1 = 144149.179499175 + -1280968.51476096 * H1_1 + 404473.889406239 * H1_2 + 291240.307793215 * H1_3 + 648138.003518916 * H1_4;


H2_1 = tanh((8.24606796818276 + -0.0278884229836469 * CRUISESPEED + -7.88241090272836 * FLEETSIZE + -0.0023723739393656 * LOADTHRESHOLD + -0.0314402959212683 * PAYLOAD));

H2_2 = tanh((-0.451225057845026 + 0.0110893022587988 * CRUISESPEED + 0.480131265670112 * FLEETSIZE + -0.0107268832082564 * LOADTHRESHOLD + 0.36324895682543 * PAYLOAD));

H2_3 = tanh((6.77137050948301 + -0.212426408097086 * CRUISESPEED + -0.201177307983684 * FLEETSIZE + 0.136371756812865 * LOADTHRESHOLD + 0.0353137103503619 * PAYLOAD));

H2_4 = tanh((14.3807400199447 + 0.0553947496270851 * CRUISESPEED + -12.0978039965396 * FLEETSIZE + -3.16735290170736 * LOADTHRESHOLD + 0.00123816004132809 * PAYLOAD));

H1_1 = tanh((13.6283100399314 + 24.8152911379362 * H2_1 + 1.30822259239345 * H2_2 + -2.99794925540879 * H2_3 + -1.96213175761907 * H2_4));

H1_2 = tanh((-6.6901777091794 + -1.43502124315089 * H2_1 + 5.51386457059185 * H2_2 + -0.269664605795962 * H2_3 + -0.985243257265383 * H2_4));

H1_3 = tanh((-3.57346780479126 + 1.17136680669945 * H2_1 + 4.91604124416307 * H2_2 + 0.138690275442076 * H2_3 + 0.928737131690687 * H2_4));

H1_4 = tanh((18.3269765182394 + -6.99587001023663 * H2_1 + 8.01362176275162 * H2_2 + -5.64267862987453 * H2_3 + -28.515487419926 * H2_4));

PREDICTED_TIME_SAVINGS_1 = 5352.83061334636 + -872.504042984142 * H1_1 + 5244.60278963391 * H1_2 + 4803.92332417259 * H1_3 + 858.689357134539 * H1_4;

% normalize impacts based on simulation max and mins
bshift = 0;
bnorm = 3260 + bshift;
cshift = 1193;
cnorm = cshift + 658;
fshift = -924;
fnorm = 22500 + fshift;
ishift = 113000;
inorm = ishift + 1384000;
tshift = 1588;
tnorm = 8411 + tshift;

BoatJobLoss = ((PREDICTED_BOAT_TRIP_LOSS_1) + bshift) /(bnorm);

Crops = ((PREDICTED_CROP_LOSS_1) + cshift)/(cnorm);

ForestLoss = ((PREDICTED_FOREST_LOSS_1) + fshift)/(fnorm);

Income = ((PREDICTED_INCOME_1) + ishift)/(inorm);

TimeSavings = ((PREDICTED_TIME_SAVINGS_1) + tshift)/ (tnorm);

% weight and sum impacts
f = wB * BoatJobLoss + wC * Crops + wF * ForestLoss + wI * Income + wT * TimeSavings;
end


function [c,ceq] = nlc(x)
% No constraints needed to define feasible space since cities are close
%   enough that all designs are feasible
Payload = round(x(1));
CruiseSpeed = round(x(2));
FleetSize = round(x(3));
PayloadFraction = 0.3;
FuelTankFraction = 0.05;
FinenessRatio = 3;
ConstraintSize = 81000;


% footprint constraint
totalLift_lb = 2000 * Payload / PayloadFraction;
liftLbPerCubicFoot = 0.06; % helium
specificDensity = 0.95; % at ~1500 ft
airshipVolume_ft3 = (totalLift_lb / liftLbPerCubicFoot) / specificDensity;
diameter_ft = 0.3048 * (4*airshipVolume_ft3 / (0.6 * pi * FinenessRatio))^(1/3) % m # not using percent cylinder
length_ft = diameter_ft * FinenessRatio % m
footprint_ft2 = length_ft * diameter_ft;

FootprintConstraint = footprint_ft2 * FleetSize * 1.1 - ConstraintSize; % this equivalent to forrestloss being below a size


c(:,1) = FootprintConstraint;
ceq = [];
end




















