
% Payload, Speed, Fleet Size
% MAYBE ADD loading rate, unloading rate, load threshold
lb = [2,   20, 1, 0]; % , 0.001,
ub = [30, 100, 5, 1];
options = optimset('Display','off');
disp("Beginning Optimization...")
for i = 1:2000 % run GA multiple times to determine result
%     [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,@nlc);
    [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,[],options); % seems reasonable
%     xGA_nl(:,i) = fmincon(@airship_surrogate_model,lb,[],[],[],[],lb,ub); % not good
end
MEANBEST = round(mean(xGA_nl,2))
meanbest2 = round(mean(round(xGA_nl),2))

% format bank
% nlc([5,59,2])

function f = airship_surrogate_model(x)
wB = -0.2; % minimize Impact to Boat Jobs (B/C it's already negative)
wC = -0.2; % maximize Impact to Crops
wF =  0.8; % minimize Impact to Forest
wI = -0.2; % maximize Impact to Farmer Income
wT = -0.2; % maximize Impact to Farmer Time
PAYLOAD = round(x(1));
CRUISESPEED = round(x(2));
FLEETSIZE = round(x(3));
LOADTHRESHOLD = x(4);

% Neural Models
H2_1 = tanh((-6.82140009616416 + 0.0296141254031997 * CRUISESPEED + 0.27726682894015 * FLEETSIZE + -0.0327786272967841 * LOADTHRESHOLD + 0.214073124476419 * PAYLOAD));

H2_2 = tanh((-0.996039546570465 + 0.0166194285484001 * CRUISESPEED + -0.240603155737739 * FLEETSIZE + -0.0137594511629133 * LOADTHRESHOLD + 0.0591675152368911 * PAYLOAD));

H2_3 = tanh((-0.501635935519083 + 0.00782246486168973 * CRUISESPEED + 0.0797068929819782 * FLEETSIZE + 0.0259457236269356 * LOADTHRESHOLD + 0.0181328807293571 * PAYLOAD));

H2_4 = tanh((1.46063370190246 + -0.0195551498509051 * CRUISESPEED + -0.554793638056514 * FLEETSIZE + -0.293275713358823 * LOADTHRESHOLD + 0.324007165856708 * PAYLOAD));

H1_1 = tanh((5.32465009131667 + 3.51515505841476 * H2_1 + -3.49402712312968 * H2_2 + 3.94322942148065 * H2_3 + 2.10048530213521 * H2_4));

H1_2 = tanh((1.80074551822067 + 0.415340853871334 * H2_1 + 3.21944972596944 * H2_2 + -10.8922319427659 * H2_3 + -1.37259305249055 * H2_4));

H1_3 = tanh((-2.79353903608788 + 0.332029793976179 * H2_1 + 2.49986817222565 * H2_2 + -8.25741433133398 * H2_3 + 3.37200535298598 * H2_4));

H1_4 = tanh((0.791819171786214 + 0.0695044151458365 * H2_1 + -0.338090891204947 * H2_2 + 0.440561713220393 * H2_3 + -0.0335013412210463 * H2_4));

PREDICTED_BOAT_TRIP_LOSS = -2649.84958941386 + 674.997732717078 * H1_1 + 1669.41280490586 * H1_2 + -513.878564053929 * H1_3 + -176.206681637052 * H1_4;



H2_1 = tanh((1.64931872064462 + 0.00151285582529594 * CRUISESPEED + -0.142451646568749 * FLEETSIZE + -0.0105818679982364 * LOADTHRESHOLD + 0.199287361512955 * PAYLOAD));

H2_2 = tanh((-3.44983496777591 + 0.0896137733329895 * CRUISESPEED + 0.563738317234257 * FLEETSIZE + -0.0570548391333973 * LOADTHRESHOLD + -0.0203657157896622 * PAYLOAD));

H2_3 = tanh((-0.640608214305051 + 0.000106192758441512 * CRUISESPEED + 0.0247712763535083 * FLEETSIZE + 0.00112763523951544 * LOADTHRESHOLD + 0.000204857655238433 * PAYLOAD));

H2_4 = tanh((66.0783485006226 + 0.00337662654507931 * CRUISESPEED + -62.8125611331862 * FLEETSIZE + -2.96632186683418 * LOADTHRESHOLD + -0.0494963127112991 * PAYLOAD));

H1_1 = tanh((-14.9824230718731 + -52.3900990362383 * H2_1 + 1.31936790463332 * H2_2 + -78.020000408733 * H2_3 + -23.6618761267103 * H2_4));

H1_2 = tanh((-4.27842827592277 + 33.6837666726963 * H2_1 + 0.285508906128306 * H2_2 + 52.8167784174987 * H2_3 + 0.00378099937632433 * H2_4));

H1_3 = tanh((-29.4460169963997 + 4.71205552838856 * H2_1 + -0.718712870484181 * H2_2 + -240.481559873042 * H2_3 + 101.666010370597 * H2_4));

H1_4 = tanh((-16.2607912061484 + -73.3158766666932 * H2_1 + -89.548930493979 * H2_2 + 8.59263409701113 * H2_3 + 67.721393849775 * H2_4));

PREDICTED_CROP_LOSS = -97.0531798755196 + 185.198274483306 * H1_1 + 919.847966220315 * H1_2 + 67.7503027275131 * H1_3 + -93.1642385453679 * H1_4;


H2_1 = tanh((-0.179126704687791 + 0.000002517048650553 * CRUISESPEED + -0.0501936894451704 * FLEETSIZE + -0.0000161515024202439 * LOADTHRESHOLD + 0.0423541357331253 * PAYLOAD));

H2_2 = tanh((0.20314519226912 + -0.0000012021478199196 * CRUISESPEED + 0.0309951088300873 * FLEETSIZE + 0.0000072092347940291 * LOADTHRESHOLD + -0.0222037116242546 * PAYLOAD));

H2_3 = tanh((1.09095961781244 + -0.0000020173701177235 * CRUISESPEED + 0.0861180671029752 * FLEETSIZE + 0.0000112215121961398 * LOADTHRESHOLD + -0.0376978802849505 * PAYLOAD));

H2_4 = tanh((1.17692248032882 + -0.000001464191535083 * CRUISESPEED + -0.31924418035379 * FLEETSIZE + 0.0000127875155245107 * LOADTHRESHOLD + -0.0281657269200531 * PAYLOAD));

H1_1 = tanh((-4.8332226256744 + -15.4743731172896 * H2_1 + -37.2239724104306 * H2_2 + 11.510655411336 * H2_3 + -0.616338308465329 * H2_4));

H1_2 = tanh((-13.2295229229229 + -23.0591143425272 * H2_1 + -73.7620690077692 * H2_2 + 9.54477900523702 * H2_3 + 21.5620430496652 * H2_4));

H1_3 = tanh((-0.225316835756132 + -6.17320551379552 * H2_1 + -8.55997900729024 * H2_2 + 2.05653108680044 * H2_3 + -0.0487175570473325 * H2_4));

H1_4 = tanh((-0.429416466260542 + -8.06070212276877 * H2_1 + -14.8732803182223 * H2_2 + 4.41525720578467 * H2_3 + 1.0672376587483 * H2_4));

PREDICTED_FOREST_LOSS = 11827.2201148766 + 14747.0603091851 * H1_1 + -3329.87760569466 * H1_2 + -4404.69310440294 * H1_3 + -1902.69447406202 * H1_4;


H2_1 = tanh((0.0473236449836474 + -0.00184887007760136 * CRUISESPEED + -0.00885656945111197 * FLEETSIZE + -0.0443187784094772 * LOADTHRESHOLD + 0.0125886262345453 * PAYLOAD));

H2_2 = tanh((-5.12940695060767 + 0.0209993470773214 * CRUISESPEED + 0.16007282493171 * FLEETSIZE + -0.176664503208586 * LOADTHRESHOLD + 0.0285786858643117 * PAYLOAD));

H2_3 = tanh((0.0948777209815656 + 0.00533499632282149 * CRUISESPEED + 0.0665626584341284 * FLEETSIZE + 0.114441723689499 * LOADTHRESHOLD + -0.0251675696340729 * PAYLOAD));

H2_4 = tanh((150.053413919505 + -1.93173584800746 * CRUISESPEED + -67.8253290661629 * FLEETSIZE + -2.60730897076072 * LOADTHRESHOLD + 8.12238449246381 * PAYLOAD));

H1_1 = tanh((4.94190108050255 + -114.301674727303 * H2_1 + -4.196295709287 * H2_2 + -49.560362660488 * H2_3 + 6.03903072537769 * H2_4));

H1_2 = tanh((39.7233788796232 + -138.234190625223 * H2_1 + 18.6552160832388 * H2_2 + -68.0211803976195 * H2_3 + -0.779620389234596 * H2_4));

H1_3 = tanh((24.5652871690277 + 33.7497698308481 * H2_1 + 87.5016341217301 * H2_2 + 19.2734871533031 * H2_3 + -51.4774628170759 * H2_4));

H1_4 = tanh((31.4702802199208 + 4.29344841293064 * H2_1 + 32.6470284608467 * H2_2 + 2.03020901957499 * H2_3 + -0.00131363120581449 * H2_4));

PREDICTED_INCOME = 472236.42956547 + -132524.410588565 * H1_1 + -208463.623538663 * H1_2 + -130881.789502555 * H1_3 + -861608.089244551 * H1_4;


H2_1 = tanh((-1.67957486961141 + 0.00537517252202919 * CRUISESPEED + 0.718814415580057 * FLEETSIZE + 0.0598065999492428 * LOADTHRESHOLD + 0.0270001808769808 * PAYLOAD));

H2_2 = tanh((-0.321466652692762 + 0.0470472353686544 * CRUISESPEED + -0.0173166913692101 * FLEETSIZE + -0.00672238228142843 * LOADTHRESHOLD + -0.0567160093789471 * PAYLOAD));

H2_3 = tanh((0.812687316865286 + -0.00472828397146747 * CRUISESPEED + -0.59805488547328 * FLEETSIZE + -0.168349905191766 * LOADTHRESHOLD + 0.336746303496498 * PAYLOAD));

H2_4 = tanh((13.345526688331 + -0.151149971898074 * CRUISESPEED + 1.29310046419622 * FLEETSIZE + -20.3046500245478 * LOADTHRESHOLD + -0.00515743394050687 * PAYLOAD));

H1_1 = tanh((1.17814232842378 + -3.58585363226574 * H2_1 + -2.16046872652955 * H2_2 + -1.26666294548681 * H2_3 + 0.138726325281939 * H2_4));

H1_2 = tanh((7.29954396664589 + 6.71612628355319 * H2_1 + 4.12138086212705 * H2_2 + -2.18140737084247 * H2_3 + -2.11189290003363 * H2_4));

H1_3 = tanh((0.720060667271129 + -2.92857557247581 * H2_1 + -1.60257678494367 * H2_2 + -1.51859581796057 * H2_3 + 0.0504979355202468 * H2_4));

H1_4 = tanh((10.2247032195112 + 4.47780522452777 * H2_1 + 2.61011516985165 * H2_2 + -7.07816581708434 * H2_3 + 1.14845384107603 * H2_4));

PREDICTED_TIME_SAVINGS = 9891.46477987144 + 1617.40422604635 * H1_1 + -1945.1067896616 * H1_2 + -5806.00710706159 * H1_3 + -3717.35846828724 * H1_4;

% normalize impacts based on simulation max and mins
bshift = -595;
bnorm = 3260 + bshift;
cshift = 2554;
cnorm = cshift + 658;
fshift = -582;
fnorm = 25000 + fshift;
ishift = 442000;
inorm = ishift + 1384000;
tshift = 1588;
tnorm = 8732 + tshift;

BoatJobLoss = ((PREDICTED_BOAT_TRIP_LOSS) + bshift) /(bnorm);

Crops = ((PREDICTED_CROP_LOSS) + cshift)/(cnorm);

ForestLoss = ((PREDICTED_FOREST_LOSS) + fshift)/(fnorm);

Income = ((PREDICTED_INCOME) + ishift)/(inorm);

TimeSavings = ((PREDICTED_TIME_SAVINGS) + tshift)/ (tnorm);

% weight and sum impacts
f = wB * BoatJobLoss + wC * Crops + wF * ForestLoss + wI * Income + wT * TimeSavings;
end


function [c,ceq] = nlc(x)
% No constraints needed to define feasible space since cities are close
%   enough that all designs are feasible
Payload = round(x(1));
CruiseSpeed = round(x(2));
FleetSize = round(x(3));
PayloadFraction = 0.3;
FuelTankFraction = 0.05;
FinenessRatio = 3;
ConstraintSize = 81000;


% footprint constraint
totalLift_lb = 2000 * Payload / PayloadFraction;
liftLbPerCubicFoot = 0.06; % helium
specificDensity = 0.95; % at ~1500 ft
airshipVolume_ft3 = (totalLift_lb / liftLbPerCubicFoot) / specificDensity;
diameter_ft = 0.3048 * (4*airshipVolume_ft3 / (0.6 * pi * FinenessRatio))^(1/3) % m # not using percent cylinder
length_ft = diameter_ft * FinenessRatio % m
footprint_ft2 = length_ft * diameter_ft;

FootprintConstraint = footprint_ft2 * FleetSize * 1.1 - ConstraintSize; % this equivalent to forrestloss being below a size


c(:,1) = FootprintConstraint;
ceq = [];
end




















