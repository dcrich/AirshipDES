
% Payload, Speed, Fleet Size
% MAYBE ADD loading rate, unloading rate, load threshold
lb = [1,   20, 1, 0]; % , 0.001,
ub = [30,  87, 4, 1];
options = optimset('Display','off');
disp("Beginning Optimization...")
c = clock;
disp(c(4:5))
for i = 1:20000 % run GA multiple times to determine result
%     [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,@nlc);
    [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,[],options); % seems reasonable
%     xGA_nl(:,i) = fmincon(@airship_surrogate_model,lb,[],[],[],[],lb,ub); % not good
end
[mv,mi] = mink(fGA_nl,10)
minbest = xGA_nl(:,mi)
MEANBEST = round(mean(minbest,2))
meanbest2 = round(mean(round(minbest),2))


figure(1)
plot(1:length(xGA_nl),xGA_nl(1,:))
title('payload')
figure(2)
plot(1:length(xGA_nl),xGA_nl(2,:))
title('speed')
figure(3)
plot(1:length(xGA_nl),xGA_nl(3,:))
title('fleet')
figure(4)
plot(1:length(xGA_nl),xGA_nl(4,:))
title('threshold')
figure(5)
plot(1:length(fGA_nl),fGA_nl)
title('f val')

% format bank
% nlc([5,59,2])

function f = airship_surrogate_model(x)
wB = -0.0; % minimize Impact to Boat Jobs (B/C it's already negative)
wC = -0.0; % maximize Impact to Crops
wF =  0.0; % minimize Impact to Forest
wI = -0.5; % maximize Impact to Farmer Income
wT = -0.5; % maximize Impact to Farmer Time
PAYLOAD = round(x(1));
CRUISESPEED = round(x(2));
FLEETSIZE = round(x(3));
LOADTHRESHOLD = x(4);
if PAYLOAD == 2 && CRUISESPEED == 20 && FLEETSIZE == 4 && LOADTHRESHOLD > 0.5 && LOADTHRESHOLD < 0.53
    stophere = 1;
end

% Neural Models
H2_1 = tanh((-9.67724000715476 + 0.0178655199191586 * CRUISESPEED + 2.77939737274817 * FLEETSIZE + 0.0578620115846363 * LOADTHRESHOLD + 0.291652545934349 * PAYLOAD));

H2_2 = tanh((-3.37940341764059 + -0.0779608179877402 * CRUISESPEED + 0.816443281251193 * FLEETSIZE + -0.227132337718437 * LOADTHRESHOLD + 0.447155618901014 * PAYLOAD));

H2_3 = tanh((-0.259092553282964 + 0.00506381052942572 * CRUISESPEED + -0.548245464519097 * FLEETSIZE + -0.0476723975846053 * LOADTHRESHOLD + 0.828104550319146 * PAYLOAD));

H2_4 = tanh((-3.33081285091286 + 0.0113527604301105 * CRUISESPEED + 1.43650663785323 * FLEETSIZE + 0.0236564120060041 * LOADTHRESHOLD + 0.211849845958232 * PAYLOAD));

H1_1 = tanh((4.05494038583117 + 0.786989700267497 * H2_1 + 0.728622140934848 * H2_2 + 1.42189871686312 * H2_3 + -1.06709286540731 * H2_4));

H1_2 = tanh((-0.632343312419131 + -0.0903209242104374 * H2_1 + 0.00264500362482385 * H2_2 + -0.0108313793986095 * H2_3 + 1.01990664437979 * H2_4));

H1_3 = tanh((2.81920080990122 + 1.45701972759089 * H2_1 + -1.52649218809264 * H2_2 + -1.96251183280216 * H2_3 + 2.00452909243558 * H2_4));

H1_4 = tanh((-3.1928005966237 + -4.17193551281313 * H2_1 + -3.52022715192401 * H2_2 + -8.43504627468673 * H2_3 + -2.73859486795307 * H2_4));

PREDICTED_BOAT_TRIP_LOSS = -2203.79907469618 + 938.108667593866 * H1_1 + -272.554664404695 * H1_2 + -522.996877762653 * H1_3 + 1392.2086854012 * H1_4;



H2_1 = tanh((-2.80179694495499 + -0.000895720934037392 * CRUISESPEED + 1.67032273263443 * FLEETSIZE + -0.0334046446248538 * LOADTHRESHOLD + 0.285727615180645 * PAYLOAD));

H2_2 = tanh((-8.34382590670788 + 0.00430723372819661 * CRUISESPEED + 0.144139409383202 * FLEETSIZE + 7.75055707591262 * LOADTHRESHOLD + -0.214446969599154 * PAYLOAD));

H2_3 = tanh((1.51573921170938 + -0.0479182975077627 * CRUISESPEED + -0.664207916972458 * FLEETSIZE + -0.0371874335120926 * LOADTHRESHOLD + -0.0117109875574711 * PAYLOAD));

H2_4 = tanh((1.91509336077529 + -0.00302357415038505 * CRUISESPEED + -0.1043781413549 * FLEETSIZE + -0.00453204411871635 * LOADTHRESHOLD + -0.863900359132345 * PAYLOAD));

H1_1 = tanh((2.05611130542313 + -0.105835452638269 * H2_1 + -1.57804746181365 * H2_2 + 0.172937771746314 * H2_3 + -2.68356586863661 * H2_4));

H1_2 = tanh((0.0984676709004241 + 0.140698867301446 * H2_1 + 0.00765393201229723 * H2_2 + -0.179833629907976 * H2_3 + -0.151470497884448 * H2_4));

H1_3 = tanh((7.07385574206519 + -0.320014971682145 * H2_1 + -0.0731445806583626 * H2_2 + 4.86100903728221 * H2_3 + -0.1599889942106 * H2_4));

H1_4 = tanh((6.43339352324888 + -0.785032609664604 * H2_1 + -0.107726003138756 * H2_2 + 4.32209041228686 * H2_3 + 0.577981493591383 * H2_4));

PREDICTED_CROP_LOSS = 69.732547354866 + 6969.62398836538 * H1_1 + 2899.76517617031 * H1_2 + -8928.47533703167 * H1_3 + 1178.18749660353 * H1_4;




H2_1 = tanh((1.67684635884152 + -0.0000002107854398708 * CRUISESPEED + -0.133561924840951 * FLEETSIZE + 0.0000189286078707223 * LOADTHRESHOLD + 0.0299925181060695 * PAYLOAD));

H2_2 = tanh((-1.22196598894382 + 0.0000024408995937679 * CRUISESPEED + -1.80351340059805 * FLEETSIZE + 0.0010230422063046 * LOADTHRESHOLD + -0.0468840717780138 * PAYLOAD));

H2_3 = tanh((1.13288245069168 + -0.0000003905338722445 * CRUISESPEED + 0.268432320618603 * FLEETSIZE + -0.0000320851615736122 * LOADTHRESHOLD + -0.00634397250460891 * PAYLOAD));

H2_4 = tanh((-1.43846840819007 + -0.000000006565923719 * CRUISESPEED + 0.195902623556318 * FLEETSIZE + 0.0000058800457567904 * LOADTHRESHOLD + 0.0136403853191379 * PAYLOAD));

H1_1 = tanh((5.51554299804095 + -4.50655397691884 * H2_1 + -10.2429822037855 * H2_2 + 8.48162296670956 * H2_3 + -5.30818356224597 * H2_4));

H1_2 = tanh((-3.8147919506042 + 14.3164329123477 * H2_1 + -7.17305390095859 * H2_2 + -11.4514542381315 * H2_3 + 5.37673618912715 * H2_4));

H1_3 = tanh((2.2968425615194 + 2.24064573645169 * H2_1 + 5.81317070058505 * H2_2 + 1.61197609904816 * H2_3 + 0.775968199626535 * H2_4));

H1_4 = tanh((6.4871317255142 + 3.77970152328718 * H2_1 + -1.48695791011278 * H2_2 + -4.9819083674271 * H2_3 + 1.43753932492531 * H2_4));

PREDICTED_FOREST_LOSS = 22361.8589162785 + 4656.63733528247 * H1_1 + 7786.62395943978 * H1_2 + 35690.4960014035 * H1_3 + -13035.4521559533 * H1_4;




H2_1 = tanh((-1.7228649514767 + 0.000363495557005621 * CRUISESPEED + 0.0610423298066681 * FLEETSIZE + 1.77874263978681 * LOADTHRESHOLD + -0.540856835064962 * PAYLOAD));

H2_2 = tanh((-66.2274073678031 + 0.697281604124828 * CRUISESPEED + -0.0874111156007276 * FLEETSIZE + -0.146760634834043 * LOADTHRESHOLD + 0.580747344192553 * PAYLOAD));

H2_3 = tanh((4.67450528662238 + -0.0200376574303566 * CRUISESPEED + -0.64764108597346 * FLEETSIZE + 0.126250499521164 * LOADTHRESHOLD + -0.0429487116762106 * PAYLOAD));

H2_4 = tanh((1.13420241757374 + -0.00597097308130761 * CRUISESPEED + -0.9484100423206 * FLEETSIZE + -0.853720270913797 * LOADTHRESHOLD + -0.308114501377211 * PAYLOAD));

H1_1 = tanh((16.4249284854801 + 11.1947551378121 * H2_1 + -0.154813602495852 * H2_2 + -6.87266090353236 * H2_3 + -2.5018834088198 * H2_4));

H1_2 = tanh((2.62700801685554 + 16.2161745409119 * H2_1 + 4.09664695367937 * H2_2 + -0.516677394969208 * H2_3 + -9.13112150171869 * H2_4));

H1_3 = tanh((5.5322860666893 + 5.18726645866222 * H2_1 + -0.347139506918896 * H2_2 + 0.891985071436283 * H2_3 + 4.58419347531985 * H2_4));

H1_4 = tanh((2.11019738007751 + -0.489055316017056 * H2_1 + 0.0306955499285693 * H2_2 + -0.31865372016165 * H2_3 + 2.43201421997038 * H2_4));

PREDICTED_INCOME = 863048.908235253 + -672652.141002324 * H1_1 + -335547.696270504 * H1_2 + -809048.674009681 * H1_3 + -773592.487979994 * H1_4;



H2_1 = tanh((0.653904105533137 + -0.00946233121328816 * CRUISESPEED + -0.00363031680210632 * FLEETSIZE + -0.221468034575937 * LOADTHRESHOLD + 0.186806698942116 * PAYLOAD));

H2_2 = tanh((0.873997082399924 + -0.00151066749109122 * CRUISESPEED + -0.131648848818344 * FLEETSIZE + -1.83247952635322 * LOADTHRESHOLD + -0.202401219104321 * PAYLOAD));

H2_3 = tanh((1.72100162514302 + -0.0102837985984221 * CRUISESPEED + -0.851623141742038 * FLEETSIZE + -0.846245914460031 * LOADTHRESHOLD + -0.0162630512841282 * PAYLOAD));

H2_4 = tanh((0.177133125544501 + -0.0069724411147703 * CRUISESPEED + 0.00191987714230115 * FLEETSIZE + 0.332448914449041 * LOADTHRESHOLD + 0.000948233921667677 * PAYLOAD));

H1_1 = tanh((-0.867978355018775 + 2.77954103913033 * H2_1 + -0.22767292428836 * H2_2 + -1.03059170521191 * H2_3 + -2.85584425541859 * H2_4));

H1_2 = tanh((-0.315752274430745 + 3.1128630990583 * H2_1 + -0.146344236688004 * H2_2 + 0.273391928106796 * H2_3 + -4.22149768011811 * H2_4));

H1_3 = tanh((0.257186594907003 + 2.96456713056921 * H2_1 + -0.343173814624205 * H2_2 + 0.202916157902252 * H2_3 + -3.8775949029165 * H2_4));

H1_4 = tanh((-4.21793511177504 + -4.06116882285615 * H2_1 + 1.24770703179598 * H2_2 + -0.259602652712369 * H2_3 + 5.47236312903167 * H2_4));

PREDICTED_TIME_SAVINGS = -295354869.432333 + 7674.9133052601 * H1_1 + 9361.67630514942 * H1_2 + -56143.0311937163 * H1_3 + -295407313.840233 * H1_4;

% normalize impacts based on simulation max and mins
bshift = 0;
bnorm = 3260 + bshift;
cshift = 2554;
cnorm = cshift + 658;
fshift = -582;
fnorm = 22500 + fshift;
ishift = 340000;
inorm = ishift + 1660000;
tshift = 2527;
tnorm = 13300 + tshift;

BoatJobLoss = ((PREDICTED_BOAT_TRIP_LOSS) + bshift) /(bnorm);

Crops = ((PREDICTED_CROP_LOSS) + cshift)/(cnorm);

ForestLoss = ((PREDICTED_FOREST_LOSS) + fshift)/(fnorm);

Income = ((PREDICTED_INCOME) + ishift)/(inorm);

TimeSavings = ((PREDICTED_TIME_SAVINGS) + tshift)/ (tnorm);

% weight and sum impacts
f = wB * BoatJobLoss + wC * Crops + wF * ForestLoss + wI * Income + wT * TimeSavings;
end


function [c,ceq] = nlc(x)
% No constraints needed to define feasible space since cities are close
%   enough that all designs are feasible
Payload = round(x(1));
CruiseSpeed = round(x(2));
FleetSize = round(x(3));
PayloadFraction = 0.3;
FuelTankFraction = 0.05;
FinenessRatio = 3;
ConstraintSize = 81000;


% footprint constraint
totalLift_lb = 2000 * Payload / PayloadFraction;
liftLbPerCubicFoot = 0.06; % helium
specificDensity = 0.95; % at ~1500 ft
airshipVolume_ft3 = (totalLift_lb / liftLbPerCubicFoot) / specificDensity;
diameter_ft = 0.3048 * (4*airshipVolume_ft3 / (0.6 * pi * FinenessRatio))^(1/3) % m # not using percent cylinder
length_ft = diameter_ft * FinenessRatio % m
footprint_ft2 = length_ft * diameter_ft;

FootprintConstraint = footprint_ft2 * FleetSize * 1.1 - ConstraintSize; % this equivalent to forrestloss being below a size


c(:,1) = FootprintConstraint;
ceq = [];
end




















