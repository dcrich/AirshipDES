
% Payload, Speed, Fleet Size
% MAYBE ADD loading rate, unloading rate, load threshold
lb = [1,   20, 1, 1]; % , 0.001,
ub = [30,  87, 4, 1];
options = optimset('Display','off');
disp("Beginning Optimization...")
c = clock;
disp(c(4:5))
for i = 1:20000 % run GA multiple times to determine result
%     [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,@nlc);
    [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,[],options); % seems reasonable
%     xGA_nl(:,i) = fmincon(@airship_surrogate_model,lb,[],[],[],[],lb,ub); % not good
end
[mv,mi] = mink(fGA_nl,10)
minbest = xGA_nl(:,mi)
MEANBEST = round(mean(minbest,2))
meanbest2 = round(mean(round(minbest),2))


figure(1)
plot(1:length(xGA_nl),xGA_nl(1,:))
title('payload')
figure(2)
plot(1:length(xGA_nl),xGA_nl(2,:))
title('speed')
figure(3)
plot(1:length(xGA_nl),xGA_nl(3,:))
title('fleet')
figure(4)
plot(1:length(xGA_nl),xGA_nl(4,:))
title('threshold')
figure(5)
plot(1:length(fGA_nl),fGA_nl)
title('f val')

% format bank
% nlc([5,59,2])

function f = airship_surrogate_model(x)
wB = -0.2; % minimize Impact to Boat Jobs (B/C it's already negative)
wC = -0.2; % maximize Impact to Crops
wF =  0.2; % minimize Impact to Forest
wI = -0.2; % maximize Impact to Farmer Income
wT = -0.2; % maximize Impact to Farmer Time
PAYLOAD = round(x(1));
CRUISESPEED = round(x(2));
FLEETSIZE = round(x(3));
LOADTHRESHOLD = x(4);

% Neural Models
H2_1 = tanh((1.33776075033309 + -0.00144649982506429 * CRUISESPEED + -0.16242161427049 * FLEETSIZE + 0.000052564790420615 * LOADTHRESHOLD + -0.57941106394554 * PAYLOAD));

H2_2 = tanh((0.857886525813607 + -0.0024086770232006 * CRUISESPEED + -0.32521243060904 * FLEETSIZE + -0.0000434164102559655 * LOADTHRESHOLD + 0.119075999125636 * PAYLOAD));

H2_3 = tanh((-9.68963523082966 + 0.196438101119933 * CRUISESPEED + 1.74829271956197 * FLEETSIZE + 0.0000765684376913726 * LOADTHRESHOLD + 0.170112425814312 * PAYLOAD));

H2_4 = tanh((-0.644549532197567 + -0.000769672015452396 * CRUISESPEED + -0.132198514808534 * FLEETSIZE + 0.000049693683585435 * LOADTHRESHOLD + 0.312631907845346 * PAYLOAD));

H1_1 = tanh((-0.372053836697845 + 6.28711806510564 * H2_1 + -0.502119300069928 * H2_2 + 3.64143004223864 * H2_3 + -4.03090667150655 * H2_4));

H1_2 = tanh((2.96812098609865 + 2.55749383784373 * H2_1 + 1.66283683945752 * H2_2 + -0.0689478856901158 * H2_3 + -2.03163152579394 * H2_4));

H1_3 = tanh((1.62327982134734 + 2.18618204553868 * H2_1 + -2.36606223554535 * H2_2 + 0.632045512891569 * H2_3 + 1.75653578579283 * H2_4));

H1_4 = tanh((1.62464039537106 + 1.73459370112893 * H2_1 + -1.43030873578365 * H2_2 + -0.0526390626061136 * H2_3 + 2.23631804755292 * H2_4));

PREDICTED_BOAT_TRIP_LOSS = -6673.07725002654 + -1078.9715113565 * H1_1 + 3945.27633464531 * H1_2 + 970.802893677651 * H1_3 + 5150.98336424283 * H1_4;


H2_1 = tanh((0.240155727933714 + 0.0171821798421369 * CRUISESPEED + 0.250627168851899 * FLEETSIZE + -0.000344273021351905 * LOADTHRESHOLD + 0.0110123977063978 * PAYLOAD));

H2_2 = tanh((-1.29508938452816 + -0.00227122806561818 * CRUISESPEED + -0.0332963185020433 * FLEETSIZE + 0.000303756168237764 * LOADTHRESHOLD + 1.8945864988673 * PAYLOAD));

H2_3 = tanh((2.49835836068551 + 0.000270264852944311 * CRUISESPEED + 0.00414329551674454 * FLEETSIZE + -0.000521335503872524 * LOADTHRESHOLD + -0.944331987117984 * PAYLOAD));

H2_4 = tanh((3.89446412235325 + -0.0163783728354823 * CRUISESPEED + -2.40764424074639 * FLEETSIZE + -0.00034358168456349 * LOADTHRESHOLD + -0.550359370006162 * PAYLOAD));

H1_1 = tanh((2.60316956458416 + -3.44227577983631 * H2_1 + -0.139844542236151 * H2_2 + 0.0868053381676057 * H2_3 + 0.192985441903731 * H2_4));

H1_2 = tanh((6.78999263257464 + -4.96837925338568 * H2_1 + -3.99463241035449 * H2_2 + 0.536252013524207 * H2_3 + -0.560305311963607 * H2_4));

H1_3 = tanh((11.4800424892398 + 2.96741487096351 * H2_1 + -3.98640694061802 * H2_2 + -0.658805874945144 * H2_3 + 9.37028070475725 * H2_4));

H1_4 = tanh((0.0646420701214304 + -0.165732353222088 * H2_1 + 0.137939086493874 * H2_2 + 0.0255020882838721 * H2_3 + 0.0668826371335431 * H2_4));

PREDICTED_CROP_LOSS = 564.621772236994 + 681.901202655229 * H1_1 + -1776.80571175783 * H1_2 + -1370.6148333947 * H1_3 + -4214.42085211619 * H1_4;


H2_1 = tanh((-1.47095641839287 + -0.0000001438980452742 * CRUISESPEED + -0.145510374356348 * FLEETSIZE + 0.0279023186531269 * LOADTHRESHOLD + 0.00905583845204007 * PAYLOAD));

H2_2 = tanh((1.17533856961001 + -0.0000005237778607815 * CRUISESPEED + -0.206297464055932 * FLEETSIZE + -0.00851734475200509 * LOADTHRESHOLD + 0.0367882979836375 * PAYLOAD));

H2_3 = tanh((1.31819055811174 + 0.0000053376516074428 * CRUISESPEED + 0.0449140391480797 * FLEETSIZE + 0.00446278781619844 * LOADTHRESHOLD + 0.166545619571317 * PAYLOAD));

H2_4 = tanh((1.48787515714989 + -0.0000000591426358268 * CRUISESPEED + -0.169418964193227 * FLEETSIZE + -0.0928108498761621 * LOADTHRESHOLD + -0.0109247991716456 * PAYLOAD));

H1_1 = tanh((0.859454293468613 + 3.49600834532646 * H2_1 + 0.575093082810931 * H2_2 + 2.37851238360947 * H2_3 + -0.897678066140895 * H2_4));

H1_2 = tanh((1.09961943442988 + 9.85521106645823 * H2_1 + 1.42023453028614 * H2_2 + 6.03777583406956 * H2_3 + -0.0183499098179962 * H2_4));

H1_3 = tanh((4.48026881535883 + 15.0034347771824 * H2_1 + -1.81460860500815 * H2_2 + 9.43467622733895 * H2_3 + 3.76660495284038 * H2_4));

H1_4 = tanh((0.990748383385254 + -7.29477674977469 * H2_1 + -0.340492559590239 * H2_2 + -6.86820568333665 * H2_3 + -1.39094399171659 * H2_4));

PREDICTED_FOREST_LOSS = 4304.06516996537 + 43736.6048377566 * H1_1 + -16821.1869570505 * H1_2 + 1961.96464732171 * H1_3 + 9293.91899812115 * H1_4;


H2_1 = tanh((-18.8245509833494 + 0.17632903484906 * CRUISESPEED + 0.166793227447097 * FLEETSIZE + 0.0000002111346022093 * LOADTHRESHOLD + 0.166058193793985 * PAYLOAD));

H2_2 = tanh((0.520878913293481 + -0.00337873470554942 * CRUISESPEED + -0.14541518667815 * FLEETSIZE + -0.0000001862865629644 * LOADTHRESHOLD + 0.181018467911084 * PAYLOAD));

H2_3 = tanh((0.269455214978412 + -0.00115858263219269 * CRUISESPEED + -0.0413161548250396 * FLEETSIZE + 0.0000003197228871993 * LOADTHRESHOLD + -0.261155041415204 * PAYLOAD));

H2_4 = tanh((-2.08315387941468 + 0.00835589318112436 * CRUISESPEED + 0.336073160819694 * FLEETSIZE + 0.0000002107106215127 * LOADTHRESHOLD + 0.0128870386171609 * PAYLOAD));

H1_1 = tanh((-0.603941068818135 + 0.538163471980151 * H2_1 + -3.34690366020992 * H2_2 + -0.857128159661678 * H2_3 + -2.27348094536061 * H2_4));

H1_2 = tanh((0.585338024909078 + -1.13988463945809 * H2_1 + -0.487025530294262 * H2_2 + -0.413555925016767 * H2_3 + 0.72462718232879 * H2_4));

H1_3 = tanh((0.358116181798379 + -0.384914883922667 * H2_1 + -5.32775505549614 * H2_2 + 5.03807129962585 * H2_3 + -2.06586637011059 * H2_4));

H1_4 = tanh((0.373466690570732 + 0.218966274688353 * H2_1 + 0.240340827621832 * H2_2 + 0.561412992007412 * H2_3 + 0.11622470053006 * H2_4));

PREDICTED_INCOME = 883462.633508324 + 947535.54171282 * H1_1 + -482987.085567944 * H1_2 + -1374383.04506835 * H1_3 + -2482370.49444817 * H1_4;



H2_1 = tanh((0.176044521685155 + 0.0000039013609106631 * CRUISESPEED + 0.000153507156642382 * FLEETSIZE + 0.425868204307006 * LOADTHRESHOLD + 0.960241405309473 * PAYLOAD));

H2_2 = tanh((-1.9688121244977 + 0.0640861851714297 * CRUISESPEED + 0.786276862181979 * FLEETSIZE + -0.375748566203689 * LOADTHRESHOLD + 0.024338756872575 * PAYLOAD));

H2_3 = tanh((-4.11210074916054 + 0.000986646501160831 * CRUISESPEED + 0.0284013066823654 * FLEETSIZE + 0.64489576991469 * LOADTHRESHOLD + 1.41522902523485 * PAYLOAD));

H2_4 = tanh((-4.71083882391445 + 0.012790534933948 * CRUISESPEED + 1.85705927662517 * FLEETSIZE + 0.425013015739818 * LOADTHRESHOLD + 0.404836836146811 * PAYLOAD));

H1_1 = tanh((-34.1601271245915 + 33.1809913831026 * H2_1 + 1.10997321935009 * H2_2 + -1.94956239567849 * H2_3 + 0.0183945466521695 * H2_4));

H1_2 = tanh((-11.1509599791732 + 36.129246892329 * H2_1 + 31.3300110872188 * H2_2 + 16.2008735344499 * H2_3 + -23.1476254803916 * H2_4));

H1_3 = tanh((25.5574458107759 + -27.5785262702127 * H2_1 + 0.42447075553197 * H2_2 + 0.893066081411643 * H2_3 + 0.205016053371877 * H2_4));

H1_4 = tanh((4.64820152608527 + -4.61160994098296 * H2_1 + -0.0825400560311341 * H2_2 + -0.13237275910846 * H2_3 + -0.0648559702160786 * H2_4));

PREDICTED_TIME_SAVINGS = 12363.4251415965 + 1918.60876747512 * H1_1 + -4823.99932860538 * H1_2 + -5873.24519824623 * H1_3 + -21875.3329570771 * H1_4;

% normalize impacts based on simulation max and mins
bshift = 0;
bnorm = 3260 + bshift;
cshift = 2554;
cnorm = cshift + 658;
fshift = -582;
fnorm = 22500 + fshift;
ishift = 340000;
inorm = ishift + 1669062;
tshift = 2527;
tnorm = 13700 + tshift;

BoatJobLoss = ((PREDICTED_BOAT_TRIP_LOSS) + bshift) /(bnorm);

Crops = ((PREDICTED_CROP_LOSS) + cshift)/(cnorm);

ForestLoss = ((PREDICTED_FOREST_LOSS) + fshift)/(fnorm);

Income = ((PREDICTED_INCOME) + ishift)/(inorm);

TimeSavings = ((PREDICTED_TIME_SAVINGS) + tshift)/ (tnorm);

% weight and sum impacts
f = wB * BoatJobLoss + wC * Crops + wF * ForestLoss + wI * Income + wT * TimeSavings;
end


function [c,ceq] = nlc(x)
% No constraints needed to define feasible space since cities are close
%   enough that all designs are feasible
Payload = round(x(1));
CruiseSpeed = round(x(2));
FleetSize = round(x(3));
PayloadFraction = 0.3;
FuelTankFraction = 0.05;
FinenessRatio = 3;
ConstraintSize = 81000;


% footprint constraint
totalLift_lb = 2000 * Payload / PayloadFraction;
liftLbPerCubicFoot = 0.06; % helium
specificDensity = 0.95; % at ~1500 ft
airshipVolume_ft3 = (totalLift_lb / liftLbPerCubicFoot) / specificDensity;
diameter_ft = 0.3048 * (4*airshipVolume_ft3 / (0.6 * pi * FinenessRatio))^(1/3) % m # not using percent cylinder
length_ft = diameter_ft * FinenessRatio % m
footprint_ft2 = length_ft * diameter_ft;

FootprintConstraint = footprint_ft2 * FleetSize * 1.1 - ConstraintSize; % this equivalent to forrestloss being below a size


c(:,1) = FootprintConstraint;
ceq = [];
end




















