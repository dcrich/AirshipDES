
% Payload, Speed, Fleet Size
% MAYBE ADD loading rate, unloading rate, load threshold
lb = [1,   20, 1, 1]; % , 0.001,
ub = [30,  87, 4, 1];
options = optimset('Display','off');
disp("Beginning Optimization...")
c = clock;
disp(c(4:5))
for i = 1:5000 % run GA multiple times to determine result
%     [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,@nlc);
    [xGA_nl(:,i),fGA_nl(i)] = ga(@airship_surrogate_model, length(lb),[],[],[],[],lb,ub,[],options); % seems reasonable
%     xGA_nl(:,i) = fmincon(@airship_surrogate_model,lb,[],[],[],[],lb,ub); % not good
end
[mv,mi] = mink(fGA_nl,10)
minbest = xGA_nl(:,mi)
MEANBEST = round(mean(minbest,2))
meanbest2 = round(mean(round(minbest),2))


figure(1)
plot(1:length(xGA_nl),xGA_nl(1,:))
title('payload')
figure(2)
plot(1:length(xGA_nl),xGA_nl(2,:))
title('speed')
figure(3)
plot(1:length(xGA_nl),xGA_nl(3,:))
title('fleet')
figure(4)
plot(1:length(xGA_nl),xGA_nl(4,:))
title('threshold')
figure(5)
plot(1:length(fGA_nl),fGA_nl)
title('f val')

% format bank
% nlc([5,59,2])

function f = airship_surrogate_model(x)
wB = -0.2; % minimize Impact to Boat Jobs (B/C it's already negative)
wC = -0.2; % maximize Impact to Crops
wF =  0.2; % minimize Impact to Forest
wI = -0.2; % maximize Impact to Farmer Income
wT = -0.2; % maximize Impact to Farmer Time
PAYLOAD = round(x(1));
CRUISESPEED = round(x(2));
FLEETSIZE = round(x(3));
LOADTHRESHOLD = x(4);

% Neural Models



    H2_1 = tanh((0.671284681637581 + 0.0224672827078719 * CRUISESPEED + 0.113149399489231 * FLEETSIZE + 0.0000157583610758515 * LOADTHRESHOLD + -0.0954778584788952 * PAYLOAD));

    H2_2 = tanh((-2.76207771181122 + 0.00518435691182377 * CRUISESPEED + 0.92252749516683 * FLEETSIZE + -0.0000133689411599814 * LOADTHRESHOLD + 0.0318923076913333 * PAYLOAD));

    H2_3 = tanh((-1.40766629561999 + 0.0284873529847599 * CRUISESPEED + -0.0629388090767111 * FLEETSIZE + -0.0000014190619068243 * LOADTHRESHOLD + -0.042808116718395 * PAYLOAD));

    H2_4 = tanh((1.66914625528511 + -0.0141258429946893 * CRUISESPEED + -0.0273940966683413 * FLEETSIZE + -0.0000653681497191229 * LOADTHRESHOLD + -0.217775250769234 * PAYLOAD));

    H1_1 = tanh((-0.238556810176674 + 0.557927316119291 * H2_1 + -0.414746512349186 * H2_2 + 0.936731146638142 * H2_3 + 2.51704712557223 * H2_4));

    H1_2 = tanh((0.137764125040988 + 0.362742122689888 * H2_1 + 0.545751851852522 * H2_2 + -0.314231863142899 * H2_3 + -0.849034329975169 * H2_4));

    H1_3 = tanh((-1.24817283002206 + -0.153540036459586 * H2_1 + -1.0732544730505 * H2_2 + 0.0793149334304418 * H2_3 + 0.0833815269991302 * H2_4));

    H1_4 = tanh((0.531854479445998 + -0.624384259303587 * H2_1 + -0.410969361474212 * H2_2 + 0.738920482427235 * H2_3 + 1.84462532115285 * H2_4));

    PREDICTED_BOAT_TRIP_LOSS = 39.2067088570749 + -6889.98489785809 * H1_1 + 8328.94823800507 * H1_2 + 4524.96464797382 * H1_3 + 13851.9845548573 * H1_4;

    
    H2_1 = tanh((-0.843831415114227 + 0.000012667735758941 * CRUISESPEED + 0.000350873983064074 * FLEETSIZE + 0.425868204307006 * LOADTHRESHOLD + 1.27621602173116 * PAYLOAD));

    H2_2 = tanh((29.9968081775952 + -0.0198901569380199 * CRUISESPEED + -30.7594615315884 * FLEETSIZE + -0.375748566203689 * LOADTHRESHOLD + 0.00208746772172257 * PAYLOAD));

    H2_3 = tanh((-2.4280925827208 + 0.025085778908257 * CRUISESPEED + 0.659761452841799 * FLEETSIZE + 0.64489576991469 * LOADTHRESHOLD + 0.205801949528537 * PAYLOAD));

    H2_4 = tanh((-82.7111961660304 + 0.0232016572228287 * CRUISESPEED + 85.7269245530476 * FLEETSIZE + 0.425013015739818 * LOADTHRESHOLD + -0.392995976293491 * PAYLOAD));

    H1_1 = tanh((63.0549715594011 + 62.3000541837634 * H2_1 + 112.462598747505 * H2_2 + -2.54611970090921 * H2_3 + 7.91010778226456 * H2_4));

    H1_2 = tanh((124.264117798183 + 5.7282805093935 * H2_1 + 94.7225881984039 * H2_2 + -2.51195150923673 * H2_3 + -31.5755274913767 * H2_4));

    H1_3 = tanh((-153.842863553713 + -1.35792018469122 * H2_1 + 14.9166017246236 * H2_2 + 2.36735001191011 * H2_3 + 166.730441691552 * H2_4));

    H1_4 = tanh((4.61112120962668 + -2.87803571680107 * H2_1 + 1.0293461938526 * H2_2 + -0.193454980513071 * H2_3 + 0.0216012089074245 * H2_4));

    PREDICTED_CROP_LOSS = 1641.5877581782 + 4779.70687200141 * H1_1 + -5496.41041168728 * H1_2 + -2383.71892841803 * H1_3 + -6255.02444318952 * H1_4;


    H2_1 = tanh((-2.39187718521142 + 0.0000001952804863664 * CRUISESPEED + -0.757382399946567 * FLEETSIZE + 0.0279023186531269 * LOADTHRESHOLD + 0.0294409211184424 * PAYLOAD));

    H2_2 = tanh((0.16274169934608 + -0.0000002476794032972 * CRUISESPEED + -0.109504951577931 * FLEETSIZE + -0.00851734475200509 * LOADTHRESHOLD + 0.0198565959791489 * PAYLOAD));

    H2_3 = tanh((1.75756291970221 + -0.0000013029868895688 * CRUISESPEED + -0.0072546050171018 * FLEETSIZE + 0.00446278781619844 * LOADTHRESHOLD + 0.125158441520621 * PAYLOAD));

    H2_4 = tanh((1.24107445259291 + -0.0000000334342720673 * CRUISESPEED + -0.119364930605708 * FLEETSIZE + -0.0928108498761621 * LOADTHRESHOLD + -0.00962103324035033 * PAYLOAD));

    H1_1 = tanh((-2.2893614845121 + 2.61655968862282 * H2_1 + 0.603249212221515 * H2_2 + 5.02726943559178 * H2_3 + -0.584088772602869 * H2_4));

    H1_2 = tanh((-9.1084363418765 + 7.37578372395668 * H2_1 + 1.68183836185817 * H2_2 + 14.888312551451 * H2_3 + 0.801455632516975 * H2_4));

    H1_3 = tanh((7.38650946572027 + 14.3162462190591 * H2_1 + 4.17561325613293 * H2_2 + 9.0306183823992 * H2_3 + -2.2476418113407 * H2_4));

    H1_4 = tanh((8.37480364928861 + -9.31323872172069 * H2_1 + -0.874019641789868 * H2_2 + -16.4377445229413 * H2_3 + -2.33700297206246 * H2_4));

    PREDICTED_FOREST_LOSS = 4210.84943737639 + 43353.6601396646 * H1_1 + -16573.5228613085 * H1_2 + 2145.61390906724 * H1_3 + 9516.92730035432 * H1_4;


    H2_1 = tanh((3.75651007458194 + -0.00904437351545409 * CRUISESPEED + -0.482864578345226 * FLEETSIZE + -0.000117244213171312 * LOADTHRESHOLD + -1.68213376289682 * PAYLOAD));

    H2_2 = tanh((-1.51317070300093 + 0.00863007257439763 * CRUISESPEED + 0.838977408089463 * FLEETSIZE + 0.000103445959485949 * LOADTHRESHOLD + 0.0293663363049779 * PAYLOAD));

    H2_3 = tanh((-20.9165725117703 + -0.0475462801279992 * CRUISESPEED + 6.45871396481466 * FLEETSIZE + -0.000177543888857144 * LOADTHRESHOLD + -0.0415564317918476 * PAYLOAD));

    H2_4 = tanh((4.10116840736788 + -0.0259863605890908 * CRUISESPEED + -0.360250792911144 * FLEETSIZE + -0.000117008774356549 * LOADTHRESHOLD + -0.03805892929616 * PAYLOAD));

    H1_1 = tanh((1.82582253180004 + 0.450463920812174 * H2_1 + -2.39671235274693 * H2_2 + -2.10950044130428 * H2_3 + -1.11354616984793 * H2_4));

    H1_2 = tanh((-3.87514864714272 + -7.19033310177924 * H2_1 + -6.11710538165197 * H2_2 + 4.19968117137543 * H2_3 + -1.0158169382681 * H2_4));

    H1_3 = tanh((-2.13083164207598 + -6.98254481950357 * H2_1 + -1.88091883067759 * H2_2 + 2.89057961920436 * H2_3 + -0.582416681852718 * H2_4));

    H1_4 = tanh((1.38501816817397 + 1.77933965510898 * H2_1 + 0.150982151651105 * H2_2 + -0.609140061445658 * H2_3 + -0.2552353194208 * H2_4));

    PREDICTED_INCOME = 699980.387700745 + 684705.409426335 * H1_1 + -434870.926448419 * H1_2 + -798944.530699119 * H1_3 + -2729751.53232027 * H1_4;



   H2_1 = tanh((0.519941891737792 + 0.0000499631437851568 * CRUISESPEED + 0.00496137561467235 * FLEETSIZE + 0.425868204307006 * LOADTHRESHOLD + 1.41835688689335 * PAYLOAD));

    H2_2 = tanh((152.683009412411 + -0.0170746473927086 * CRUISESPEED + -76.8492190305964 * FLEETSIZE + -0.375748566203689 * LOADTHRESHOLD + -0.174671513178504 * PAYLOAD));

    H2_3 = tanh((-17.131222084652 + -0.0444481956131365 * CRUISESPEED + 17.8941580302254 * FLEETSIZE + 0.64489576991469 * LOADTHRESHOLD + 0.00138357860802853 * PAYLOAD));

    H2_4 = tanh((-46.5904222585753 + -0.000168097686201999 * CRUISESPEED + 44.789226088635 * FLEETSIZE + 0.425013015739818 * LOADTHRESHOLD + -0.105676960242739 * PAYLOAD));

    H1_1 = tanh((2.62427537151923 + 10.5532908376747 * H2_1 + -17.5659112805211 * H2_2 + -3.17293138021174 * H2_3 + -27.6773766588493 * H2_4));

    H1_2 = tanh((57.6294470937992 + -57.7284775082692 * H2_1 + -27.1757327532506 * H2_2 + -1.02715551776067 * H2_3 + -26.943648496635 * H2_4));

    H1_3 = tanh((-69.1351316953185 + 37.6457011873077 * H2_1 + 25.8853128948754 * H2_2 + 27.7737512883717 * H2_3 + 9.22134937230436 * H2_4));

    H1_4 = tanh((24.496445358452 + -24.2923474372948 * H2_1 + 6.35032548120204 * H2_2 + 0.223875233264847 * H2_3 + 6.2203508635659 * H2_4));

    PREDICTED_TIME_SAVINGS = 6262.43532136458 + 736.821035080693 * H1_1 + -3632.97715892487 * H1_2 + -4111.7020620544 * H1_3 + -18856.0634519587 * H1_4;

% normalize impacts based on simulation max and mins
bshift = 0;
bnorm = 3260 + bshift;
cshift = 2554;
cnorm = cshift + 658;
fshift = -582;
fnorm = 25000 + fshift;
ishift = 290000;
inorm = ishift + 1384000;
tshift = 1588;
tnorm = 8411 + tshift;

BoatJobLoss = ((PREDICTED_BOAT_TRIP_LOSS) + bshift) /(bnorm);

Crops = ((PREDICTED_CROP_LOSS) + cshift)/(cnorm);

ForestLoss = ((PREDICTED_FOREST_LOSS) + fshift)/(fnorm);

Income = ((PREDICTED_INCOME) + ishift)/(inorm);

TimeSavings = ((PREDICTED_TIME_SAVINGS) + tshift)/ (tnorm);

% weight and sum impacts
f = wB * BoatJobLoss + wC * Crops + wF * ForestLoss + wI * Income + wT * TimeSavings;
end


function [c,ceq] = nlc(x)
% No constraints needed to define feasible space since cities are close
%   enough that all designs are feasible
Payload = round(x(1));
CruiseSpeed = round(x(2));
FleetSize = round(x(3));
PayloadFraction = 0.3;
FuelTankFraction = 0.05;
FinenessRatio = 3;
ConstraintSize = 81000;


% footprint constraint
totalLift_lb = 2000 * Payload / PayloadFraction;
liftLbPerCubicFoot = 0.06; % helium
specificDensity = 0.95; % at ~1500 ft
airshipVolume_ft3 = (totalLift_lb / liftLbPerCubicFoot) / specificDensity;
diameter_ft = 0.3048 * (4*airshipVolume_ft3 / (0.6 * pi * FinenessRatio))^(1/3) % m # not using percent cylinder
length_ft = diameter_ft * FinenessRatio % m
footprint_ft2 = length_ft * diameter_ft;

FootprintConstraint = footprint_ft2 * FleetSize * 1.1 - ConstraintSize; % this equivalent to forrestloss being below a size


c(:,1) = FootprintConstraint;
ceq = [];
end




















